%arg -ignoreZeros
%arg -solver glpk
parameters:
K :=2;
ORDERS := 1(1)5;
NODES := 1(1)10;
EDGES := 1(1)2;
d[ORDERS] := (97, 62, 60, 64, 83);
c[NODES,NODES,EDGES] := (
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 408 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 51 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 280 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 130 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 102 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 185),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 120),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)));
u[NODES,NODES,EDGES] := (
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 219 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 260 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 155 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 119 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 108 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 131),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)),
(( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 146),( 0 , 0),( 0 , 0),( 0 , 0),( 0 , 0)));
b[NODES,ORDERS] := ((0, 0, -1, 0, 0), (1, 0, 0, 1, 1), (0, 0, 0, 0, 0), (0, 0, 0, 0, -1), (0, 0, 0, 0, 0), (0, 0, 0, 0, 0), (0, 1, 1, 0, 0), (-1, 0, 0, -1, 0), (0, 0, 0, 0, 0), (0, -1, 0, 0, 0));
variables:
y[ORDERS,NODES,NODES,EDGES]: integer[0..1];
objectives:
cost: sum{ h in ORDERS, i in NODES , j in NODES, e in EDGES : c[i,j,e] * y[h,i,j,e] } -> min;
constraints:
bilancio  { i in NODES,  h in ORDERS: sum{ j in NODES, e in EDGES : y[h,j,i,e] } - sum{ j in NODES, e in EDGES : y[h,i,j,e] } = b[i,h]; }
capacity { i in NODES , j in NODES, e in EDGES : sum{ h in ORDERS : y[h,i,j,e] * d[h] } <= u[i,j,e]; }
lunghezza { h in ORDERS : sum {i in NODES, j in NODES, e in EDGES : y[h,i,j,e]} <= K ; }
unico {h in ORDERS, i in NODES, e in EDGES: sum {j in NODES: y[h,i,j,e]} <= 1; }
