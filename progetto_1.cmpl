
%arg -ignoreZeros

parameters:

K := 3;

ORDERS := 1(1)2;

NODES := 1(1)4;

d[ORDERS] :=  ( 50, 60);


c[NODES,NODES] :=
( ( 0, 100, 110, 50),
  ( 0, 0, 90, 110),
  ( 0, 0, 0, 120),
  ( 0, 0, 0, 0) );

u[NODES,NODES] :=
( ( 0, 100, 110, 50),
  ( 0, 0, 90, 110),
  ( 0, 0, 0, 120),
  ( 0, 0, 0, 0) );
  
b[NODES,ORDERS] :=
( ( -1, -1),
  ( 0, 0),
  ( 0, 0),
  ( 1, 1),
 );

variables:

y[NODES,NODES,ORDERS]: integer[0..1];

objectives:

cost: sum{ i in NODES , j in NODES , h in ORDERS : c[i,j] * y[i,j,h] } -> min;

constraints:

bilancio  { i in NODES,  h in ORDERS: sum{ j in NODES : y[j,i,h] } - sum{ j in NODES : y[i,j,h] } = b[i,h]; }
capacity { i in NODES , j in NODES : sum{ h in ORDERS : y[i,j,h] * d[h] } <= u[i,j]; }
lunghezza { h in ORDERS : sum {i in NODES , j in NODES: y[i,j,h]} <= K ; }
unico {i in NODES,  h in ORDERS: sum {j in NODES: y[i,j,h]} <= 1; }

