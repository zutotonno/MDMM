%arg -ignoreZeros
%arg -solver glpk
parameters:
K :=2;
ORDERS := 1(1)5;
NODES := 1(1)10;
EDGES := 1(1)2;
d[ORDERS] := (51, 65, 100, 74, 94);
c[NODES,NODES,EDGES] := (
(( 0 , 10000000),( 51 , 10000000),( 124 , 10000000),( 183 , 10000000),( 200 , 10000000),( 355 , 10000000),( 342 , 10000000),( 441 , 10000000),( 536 , 10000000),( 468 , 306)),
(( 70 , 10000000),( 0 , 10000000),( 63 , 10000000),( 142 , 10000000),( 186 , 10000000),( 216 , 10000000),( 275 , 10000000),( 432 , 10000000),( 406 , 10000000),( 424 , 10000000)),
(( 140 , 10000000),( 62 , 10000000),( 0 , 10000000),( 66 , 10000000),( 126 , 10000000),( 213 , 10000000),( 252 , 10000000),( 285 , 10000000),( 330 , 10000000),( 364 , 10000000)),
(( 177 , 10000000),( 136 , 10000000),( 50 , 10000000),( 0 , 10000000),( 56 , 10000000),( 114 , 10000000),( 210 , 10000000),( 264 , 10000000),( 370 , 10000000),( 438 , 246)),
(( 244 , 10000000),( 195 , 10000000),( 150 , 10000000),( 57 , 10000000),( 0 , 10000000),( 57 , 10000000),( 124 , 10000000),( 177 , 10000000),( 224 , 10000000),( 345 , 10000000)),
(( 250 , 10000000),( 296 , 10000000),( 189 , 10000000),( 124 , 84),( 57 , 10000000),( 0 , 10000000),( 70 , 10000000),( 132 , 10000000),( 201 , 10000000),( 296 , 10000000)),
(( 312 , 10000000),( 285 , 10000000),( 240 , 10000000),( 159 , 10000000),( 142 , 10000000),( 75 , 10000000),( 0 , 10000000),( 73 , 10000000),( 110 , 10000000),( 198 , 10000000)),
(( 518 , 10000000),( 342 , 10000000),( 375 , 10000000),( 212 , 10000000),( 168 , 10000000),( 124 , 10000000),( 68 , 10000000),( 0 , 10000000),( 66 , 42),( 110 , 10000000)),
(( 560 , 10000000),( 455 , 10000000),( 312 , 10000000),( 305 , 10000000),( 256 , 10000000),( 189 , 10000000),( 114 , 10000000),( 69 , 10000000),( 0 , 10000000),( 60 , 10000000)),
(( 504 , 10000000),( 528 , 10000000),( 427 , 10000000),( 438 , 10000000),( 325 , 10000000),( 264 , 10000000),( 153 , 10000000),( 126 , 10000000),( 51 , 10000000),( 0 , 10000000)));
u[NODES,NODES,EDGES] := (
(( 0 , 0),( 239 , 0),( 104 , 0),( 125 , 0),( 270 , 0),( 226 , 0),( 133 , 0),( 297 , 0),( 299 , 0),( 166 , 135)),
(( 177 , 0),( 0 , 0),( 191 , 0),( 133 , 0),( 153 , 0),( 270 , 0),( 121 , 0),( 135 , 0),( 185 , 0),( 247 , 0)),
(( 148 , 0),( 241 , 0),( 0 , 0),( 290 , 0),( 238 , 0),( 149 , 0),( 242 , 0),( 244 , 0),( 150 , 0),( 144 , 0)),
(( 174 , 0),( 117 , 0),( 106 , 0),( 0 , 0),( 233 , 0),( 255 , 0),( 151 , 0),( 216 , 0),( 289 , 0),( 123 , 115)),
(( 193 , 0),( 265 , 0),( 249 , 0),( 248 , 0),( 0 , 0),( 207 , 0),( 267 , 0),( 121 , 0),( 207 , 0),( 129 , 0)),
(( 246 , 0),( 132 , 0),( 231 , 0),( 106 , 108),( 164 , 0),( 0 , 0),( 183 , 0),( 280 , 0),( 204 , 0),( 281 , 0)),
(( 262 , 0),( 142 , 0),( 124 , 0),( 154 , 0),( 156 , 0),( 154 , 0),( 0 , 0),( 289 , 0),( 272 , 0),( 164 , 0)),
(( 236 , 0),( 276 , 0),( 198 , 0),( 220 , 0),( 147 , 0),( 259 , 0),( 289 , 0),( 0 , 0),( 290 , 136),( 138 , 0)),
(( 226 , 0),( 112 , 0),( 153 , 0),( 130 , 0),( 182 , 0),( 184 , 0),( 197 , 0),( 150 , 0),( 0 , 0),( 211 , 0)),
(( 217 , 0),( 268 , 0),( 183 , 0),( 160 , 0),( 266 , 0),( 223 , 0),( 217 , 0),( 271 , 0),( 113 , 0),( 0 , 0)));
b[NODES,ORDERS] := ((1, -1, 0, 0, 0), (-1, 0, 0, 0, 0), (0, 0, 0, 0, 0), (0, 0, 0, 0, -1), (0, 0, -1, 0, 1), (0, 0, 1, 0, 0), (0, 0, 0, 0, 0), (0, 1, 0, 1, 0), (0, 0, 0, 0, 0), (0, 0, 0, -1, 0));
variables:
y[ORDERS,NODES,NODES,EDGES]: integer[0..1];
objectives:
cost: sum{ h in ORDERS, i in NODES , j in NODES, e in EDGES : c[i,j,e] * y[h,i,j,e] } -> min;
constraints:
bilancio  { i in NODES,  h in ORDERS: sum{ j in NODES, e in EDGES : y[h,j,i,e] } - sum{ j in NODES, e in EDGES : y[h,i,j,e] } = b[i,h]; }
capacity { i in NODES , j in NODES, e in EDGES : sum{ h in ORDERS : y[h,i,j,e] * d[h] } <= u[i,j,e]; }
lunghezza { h in ORDERS : sum {i in NODES, j in NODES, e in EDGES : y[h,i,j,e]} <= K ; }
unico {h in ORDERS, i in NODES, e in EDGES: sum {j in NODES: y[h,i,j,e]} <= 1; }
